# This is a basic workflow to help you get started with Actions
name: EKS cluster creation

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#  workflow_dispatch:
#    inputs:
#      destroy_terraform:
#        description: 'True to print to STDOUT'
#        required: true
#        type: boolean

env:
  AWS_REGION : "us-east-1" #Change to reflect your Region
  AWS_IAM_ROLE: "${{ vars.AWS_IAM_ROLE }}"
  AWS_ACCOUNT_ID: "${{ vars.AWS_ACCOUNT_ID }}"
  GITHUB_TOKEN:  "${{ secrets.GITHUB_TOKEN }}"

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  TerraformCheckov:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_IAM_ROLE }} #change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Terraform
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64 -O /usr/local/bin/terragrunt
          chmod +x /usr/local/bin/terragrunt
      - name: Install Checkov
        run: |
          pip install checkov
      - name: Checkov Scan
        continue-on-error: true
        run: |
          checkov -d .

  TerraformPlanApply:
    runs-on: ubuntu-latest
    needs:
      - TerraformCheckov
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Install MySQL client
        run: |
          sudo apt-get update -q
          sudo apt-get install -y mysql-client
        shell: bash
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_IAM_ROLE }} #change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Terraform
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64 -O /usr/local/bin/terragrunt
          chmod +x /usr/local/bin/terragrunt
      - uses: hashicorp/setup-terraform@v2
      - name: Initialize Terraform
        run: |
          terraform init
      - name: Apply Terraform
        run: |
          terraform plan
          terraform apply -auto-approve

